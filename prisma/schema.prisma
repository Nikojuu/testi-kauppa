generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Store {
  id                   String                 @id @unique
  name                 String
  address              String
  createdAt            DateTime               @default(now())
  owner_first_name     String
  owner_last_name      String
  adminAccessId        String?
  isAdmin              Boolean                @default(false)
  banners              Banner[]
  Category             Category[]
  Order                Order[]
  products             Product[]
  ProductVariation     ProductVariation[]
  ShipitShippingMethod ShipitShippingMethod[]
  ShipmentMethods      ShipmentMethods[]
  storeSettings        StoreSettings?
  VariationOption      VariationOption[]
}

model StoreSettings {
  id             String   @id @default(uuid())
  storeId        String   @unique
  ownerFirstName String
  ownerLastName  String
  email          String
  phone          String
  address        String
  city           String
  postalCode     String
  country        String   @default("FI")
  currency       String   @default("EUR")
  businessId     String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  defaultVatRate Float
  logoUrl        String?
  Store          Store    @relation(fields: [storeId], references: [id])
}

model Product {
  id               String             @id @default(uuid())
  name             String
  description      String
  price            Int
  images           String[]
  createdAt        DateTime           @default(now())
  storeId          String
  saleEndDate      DateTime?
  salePrice        Int?
  saleStartDate    DateTime?
  salePercent      String?
  sku              String?
  quantity         Int?
  showOnStore      Boolean            @default(true)
  vatPercentage    Float?
  metaDescription  String?
  metaTitle        String?
  slug             String             @unique
  soldQuantity     Int                @default(0)
  Store            Store              @relation(fields: [storeId], references: [id])
  ProductVariation ProductVariation[]
  categories       Category[]         @relation("CategoryToProduct")
}

model Banner {
  id          String   @id @default(uuid())
  title       String
  imageString String
  createdAt   DateTime @default(now())
  storeId     String
  Store       Store    @relation(fields: [storeId], references: [id])
}

model Category {
  id        String     @id @default(uuid())
  name      String
  slug      String     @unique
  storeId   String
  parentId  String?
  createdAt DateTime   @default(now())
  parent    Category?  @relation("CategoryToSubcategories", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryToSubcategories")
  store     Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
  products  Product[]  @relation("CategoryToProduct")
}

model Order {
  id                     String                @id @default(uuid())
  storeId                String?
  createdAt              DateTime              @default(now())
  totalAmount            Int                   @default(0)
  status                 OrderStatus           @default(PENDING)
  paytrailTransactionId  String?
  shipitShippingMethodId String?
  shipitOrderId          String?
  trackingNumber         String?
  trackingUrls           String[]
  freightDoc             String[]
  customerData           Json?
  shipmentMethod         Json?
  items                  Json?
  orderNumber            Int                   @default(0)
  ShipitShippingMethod   ShipitShippingMethod? @relation(fields: [shipitShippingMethodId], references: [id])
  Store                  Store?                @relation(fields: [storeId], references: [id])
  OrderLineItems         OrderLineItems[]
}

model ShipmentMethods {
  id                         String  @id @default(uuid())
  name                       String
  description                String
  storeId                    String?
  max_estimate_delivery_days Int?
  min_estimate_delivery_days Int?
  active                     Boolean @default(true)
  price                      Float
  Store                      Store?  @relation(fields: [storeId], references: [id])
}

model ShipitShippingMethod {
  id                 String       @id @default(uuid())
  serviceId          String
  name               String
  carrier            String
  logo               String
  pickUpIncluded     Boolean      @default(false)
  homeDelivery       Boolean      @default(false)
  worldwideDelivery  Boolean      @default(false)
  fragile            Boolean      @default(false)
  domesticDeliveries Boolean      @default(true)
  information        String?
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  storeId            String?
  description        String
  height             Float
  length             Float
  type               ShipmentType @default(PACKAGE)
  width              Float
  price              Float
  weight             Float
  pickupPoint        Boolean      @default(false)
  onlyParchelLocker  Boolean      @default(true)
  Order              Order[]
  Store              Store?       @relation(fields: [storeId], references: [id])
}

model ProductVariation {
  id            String    @id
  sku           String?
  price         Int?
  images        String[]
  productId     String
  createdAt     DateTime  @default(now())
  optionName    String
  optionValue   String
  storeId       String
  saleEndDate   DateTime?
  salePercent   String?
  salePrice     Int?
  saleStartDate DateTime?
  showOnStore   Boolean   @default(true)
  quantity      Int?
  description   String?
  soldQuantity  Int       @default(0)
  Product       Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  Store         Store     @relation(fields: [storeId], references: [id])
}

model VariationOption {
  id        String   @id
  name      String
  values    String[]
  storeId   String
  createdAt DateTime @default(now())
  Store     Store    @relation(fields: [storeId], references: [id])
}

model OrderLineItems {
  id          String    @id @default(uuid())
  orderId     String
  itemType    ItemType?
  quantity    Int
  price       Int
  totalAmount Int
  productCode String
  Order       Order     @relation(fields: [orderId], references: [id])

  @@index([orderId])
}

model LastOrderNumber {
  id              String @id @default(uuid())
  storeId         String @unique
  lastOrderNumber Int    @default(0)
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
  FAILED
  PAID
  SHIPPED
}

enum ShipmentType {
  PACKAGE
  DOCUMENT
  PALLET
}

enum ItemType {
  PRODUCT
  VARIATION
  SHIPPING
}
